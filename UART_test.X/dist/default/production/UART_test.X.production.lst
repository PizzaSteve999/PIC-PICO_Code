

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 12 17:24:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F884
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F884 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     008F                     	;# 
    92     0090                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0093                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     0105                     	;# 
   111     0107                     	;# 
   112     0108                     	;# 
   113     0109                     	;# 
   114     010C                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     0185                     	;# 
   120     0187                     	;# 
   121     0188                     	;# 
   122     0189                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     008F                     	;# 
   170     0090                     	;# 
   171     0091                     	;# 
   172     0092                     	;# 
   173     0093                     	;# 
   174     0093                     	;# 
   175     0093                     	;# 
   176     0094                     	;# 
   177     0095                     	;# 
   178     0096                     	;# 
   179     0097                     	;# 
   180     0098                     	;# 
   181     0099                     	;# 
   182     009A                     	;# 
   183     009B                     	;# 
   184     009C                     	;# 
   185     009D                     	;# 
   186     009E                     	;# 
   187     009F                     	;# 
   188     0105                     	;# 
   189     0107                     	;# 
   190     0108                     	;# 
   191     0109                     	;# 
   192     010C                     	;# 
   193     010C                     	;# 
   194     010D                     	;# 
   195     010E                     	;# 
   196     010F                     	;# 
   197     0185                     	;# 
   198     0187                     	;# 
   199     0188                     	;# 
   200     0189                     	;# 
   201     018C                     	;# 
   202     018D                     	;# 
   203     0019                     _TXREG	set	25
   204     0007                     _PORTCbits	set	7
   205     0018                     _RCSTAbits	set	24
   206     0064                     _TXIF	set	100
   207     0087                     _TRISCbits	set	135
   208     0099                     _SPBRG	set	153
   209     0098                     _TXSTAbits	set	152
   210     04C1                     _TRMT	set	1217
   211                           
   212                           	psect	cinit
   213     07FB                     start_initialization:	
   214                           ; #config settings
   215                           
   216     07FB                     __initialization:
   217                           
   218                           ; Clear objects allocated to COMMON
   219     07FB  01F4               	clrf	__pbssCOMMON& (0+127)
   220     07FC  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   221     07FD                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224     07FD                     __end_of__initialization:
   225     07FD  0183               	clrf	3
   226     07FE  118A  2FDE         	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMMON
   229     0074                     __pbssCOMMON:
   230     0074                     _count:
   231     0074                     	ds	2
   232                           
   233                           	psect	cstackCOMMON
   234     0070                     __pcstackCOMMON:
   235     0070                     ?_UART_Init:
   236     0070                     ??_UART_Init:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_UART_send_char:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ??_UART_send_char:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     UART_send_char@data:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 1 bytes @ 0x0
   253     0070                     	ds	1
   254     0071                     ??_main:
   255                           
   256                           ; 1 bytes @ 0x1
   257     0071                     	ds	3
   258                           
   259                           	psect	maintext
   260     07DE                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 54 in file "newmain.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, pclath, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   280 ;;      Params:         0       0       0       0
   281 ;;      Locals:         0       0       0       0
   282 ;;      Temps:          3       0       0       0
   283 ;;      Totals:         3       0       0       0
   284 ;;Total ram usage:        3 bytes
   285 ;; Hardware stack levels required when called: 1
   286 ;; This function calls:
   287 ;;		_UART_Init
   288 ;;		_UART_send_char
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294     07DE                     _main:	
   295                           ;psect for function _main
   296                           
   297     07DE                     l608:	
   298                           ;incstack = 0
   299                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   300                           
   301                           
   302                           ;newmain.c: 55:     UART_Init();
   303     07DE  118A  27C6  118A   	fcall	_UART_Init
   304     07E1                     l37:	
   305                           ;newmain.c: 57:     while(1) {
   306                           
   307                           
   308                           ;newmain.c: 58:         UART_send_char('A');
   309     07E1  3041               	movlw	65
   310     07E2  118A  27B6  118A   	fcall	_UART_send_char
   311     07E5                     l610:
   312                           
   313                           ;newmain.c: 59:         _delay((unsigned long)((400)*(20000000/4000.0)));
   314     07E5  300B               	movlw	11
   315     07E6  00F3               	movwf	??_main+2
   316     07E7  3026               	movlw	38
   317     07E8  00F2               	movwf	??_main+1
   318     07E9  305D               	movlw	93
   319     07EA  00F1               	movwf	??_main
   320     07EB                     u37:
   321     07EB  0BF1               	decfsz	??_main,f
   322     07EC  2FEB               	goto	u37
   323     07ED  0BF2               	decfsz	??_main+1,f
   324     07EE  2FEB               	goto	u37
   325     07EF  0BF3               	decfsz	??_main+2,f
   326     07F0  2FEB               	goto	u37
   327     07F1  2FF2               	nop2
   328     07F2                     l612:
   329                           
   330                           ;newmain.c: 60:         count++;
   331     07F2  3001               	movlw	1
   332     07F3  07F4               	addwf	_count,f
   333     07F4  1803               	skipnc
   334     07F5  0AF5               	incf	_count+1,f
   335     07F6  3000               	movlw	0
   336     07F7  07F5               	addwf	_count+1,f
   337     07F8  2FE1               	goto	l37
   338     07F9  118A  2800         	ljmp	start
   339     07FB                     __end_of_main:
   340                           
   341                           	psect	text1
   342     07B6                     __ptext1:	
   343 ;; *************** function _UART_send_char *****************
   344 ;; Defined at:
   345 ;;		line 46 in file "newmain.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  data            1    wreg     unsigned char 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  data            1    0[COMMON] unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   359 ;;      Params:         0       0       0       0
   360 ;;      Locals:         1       0       0       0
   361 ;;      Temps:          0       0       0       0
   362 ;;      Totals:         1       0       0       0
   363 ;;Total ram usage:        1 bytes
   364 ;; Hardware stack levels used: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372     07B6                     _UART_send_char:	
   373                           ;psect for function _UART_send_char
   374                           
   375                           
   376                           ;incstack = 0
   377                           ; Regs used in _UART_send_char: [wreg]
   378                           ;UART_send_char@data stored from wreg
   379     07B6  00F0               	movwf	UART_send_char@data
   380     07B7                     l604:
   381     07B7                     l26:	
   382                           ;newmain.c: 46: void UART_send_char(unsigned char data);newmain.c: 47: {;newmain.c: 48: 
      +                              while(!TXIF);
   383                           
   384     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   385     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   386     07B9  1E0C               	btfss	12,4	;volatile
   387     07BA  2FBC               	goto	u11
   388     07BB  2FBD               	goto	u10
   389     07BC                     u11:
   390     07BC  2FB7               	goto	l26
   391     07BD                     u10:
   392     07BD                     l606:
   393                           
   394                           ;newmain.c: 49:     TXREG = data;
   395     07BD  0870               	movf	UART_send_char@data,w
   396     07BE  0099               	movwf	25	;volatile
   397     07BF                     l29:	
   398                           ;newmain.c: 50:     while(!TRMT);
   399                           
   400     07BF  1683               	bsf	3,5	;RP0=1, select bank1
   401     07C0  1303               	bcf	3,6	;RP1=0, select bank1
   402     07C1  1C98               	btfss	24,1	;volatile
   403     07C2  2FC4               	goto	u21
   404     07C3  2FC5               	goto	u20
   405     07C4                     u21:
   406     07C4  2FBF               	goto	l29
   407     07C5                     u20:
   408     07C5                     l32:
   409     07C5  0008               	return
   410     07C6                     __end_of_UART_send_char:
   411                           
   412                           	psect	text2
   413     07C6                     __ptext2:	
   414 ;; *************** function _UART_Init *****************
   415 ;; Defined at:
   416 ;;		line 29 in file "newmain.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  spbrg_value     2    0        unsigned int 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   430 ;;      Params:         0       0       0       0
   431 ;;      Locals:         0       0       0       0
   432 ;;      Temps:          0       0       0       0
   433 ;;      Totals:         0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443     07C6                     _UART_Init:	
   444                           ;psect for function _UART_Init
   445                           
   446     07C6                     l584:	
   447                           ;incstack = 0
   448                           ; Regs used in _UART_Init: [wreg]
   449                           
   450                           
   451                           ;newmain.c: 31:     TXSTAbits.BRGH = 1;
   452     07C6  1683               	bsf	3,5	;RP0=1, select bank1
   453     07C7  1303               	bcf	3,6	;RP1=0, select bank1
   454     07C8  1518               	bsf	24,2	;volatile
   455     07C9                     l586:
   456                           
   457                           ;newmain.c: 33:     SPBRG = spbrg_value;
   458     07C9  3081               	movlw	129
   459     07CA  0099               	movwf	25	;volatile
   460     07CB                     l588:
   461                           
   462                           ;newmain.c: 35:     TXSTAbits.SYNC = 0;
   463     07CB  1218               	bcf	24,4	;volatile
   464     07CC                     l590:
   465                           
   466                           ;newmain.c: 36:     RCSTAbits.SPEN = 1;
   467     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   468     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   469     07CE  1798               	bsf	24,7	;volatile
   470     07CF                     l592:
   471                           
   472                           ;newmain.c: 37:     TXSTAbits.TXEN = 1;
   473     07CF  1683               	bsf	3,5	;RP0=1, select bank1
   474     07D0  1303               	bcf	3,6	;RP1=0, select bank1
   475     07D1  1698               	bsf	24,5	;volatile
   476     07D2                     l594:
   477                           
   478                           ;newmain.c: 38:     RCSTAbits.CREN = 0;
   479     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   480     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   481     07D4  1218               	bcf	24,4	;volatile
   482     07D5                     l596:
   483                           
   484                           ;newmain.c: 39:     TXSTAbits.TX9 = 0;
   485     07D5  1683               	bsf	3,5	;RP0=1, select bank1
   486     07D6  1303               	bcf	3,6	;RP1=0, select bank1
   487     07D7  1318               	bcf	24,6	;volatile
   488     07D8                     l598:
   489                           
   490                           ;newmain.c: 41:     TRISCbits.TRISC6 = 0;
   491     07D8  1307               	bcf	7,6	;volatile
   492     07D9                     l600:
   493                           
   494                           ;newmain.c: 42:     TRISCbits.TRISC4 = 0;
   495     07D9  1207               	bcf	7,4	;volatile
   496     07DA                     l602:
   497                           
   498                           ;newmain.c: 43:     PORTCbits.RC4 = 1;
   499     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   500     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   501     07DC  1607               	bsf	7,4	;volatile
   502     07DD                     l23:
   503     07DD  0008               	return
   504     07DE                     __end_of_UART_Init:
   505     007E                     btemp	set	126	;btemp
   506     007E                     wtemp0	set	126
   507                           
   508                           	psect	config
   509                           
   510                           ;Config register CONFIG1 @ 0x2007
   511                           ;	Oscillator Selection bits
   512                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   513                           ;	Watchdog Timer Enable bit
   514                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   515                           ;	Power-up Timer Enable bit
   516                           ;	PWRTE = OFF, PWRT disabled
   517                           ;	RE3/MCLR pin function select bit
   518                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   519                           ;	Code Protection bit
   520                           ;	CP = OFF, Program memory code protection is disabled
   521                           ;	Data Code Protection bit
   522                           ;	CPD = OFF, Data memory code protection is disabled
   523                           ;	Brown Out Reset Selection bits
   524                           ;	BOREN = OFF, BOR disabled
   525                           ;	Internal External Switchover bit
   526                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   527                           ;	Fail-Safe Clock Monitor Enabled bit
   528                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   529                           ;	Low Voltage Programming Enable bit
   530                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   531                           ;	In-Circuit Debugger Mode bit
   532                           ;	DEBUG = 0x1, unprogrammed default
   533     2007                     	org	8199
   534     2007  20D2               	dw	8402
   535                           
   536                           ;Config register CONFIG2 @ 0x2008
   537                           ;	Brown-out Reset Selection bit
   538                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
   539                           ;	Flash Program Memory Self Write Enable bits
   540                           ;	WRT = OFF, Write protection off
   541     2008                     	org	8200
   542     2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              1 COMMON     3     3      0
                          _UART_Init
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (1) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     2      0      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       6       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       6      10        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 12 17:24:21 2024

                     l23 07DD                       l32 07C5                       l26 07B7  
                     l29 07BF                       l37 07E1                       u10 07BD  
                     u11 07BC                       u20 07C5                       u21 07C4  
                     u37 07EB                      l600 07D9                      l602 07DA  
                    l610 07E5                      l604 07B7                      l612 07F2  
                    l606 07BD                      l608 07DE                      l590 07CC  
                    l592 07CF                      l584 07C6                      l594 07D2  
                    l586 07C9                      l596 07D5                      l588 07CB  
                    l598 07D8                     _TRMT 04C1                     _TXIF 0064  
                   _main 07DE                     btemp 007E                     start 0000  
                  ?_main 0070                    _SPBRG 0099                    _TXREG 0019  
                  _count 0074                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB                   ??_main 0071  
      __end_of_UART_Init 07DE  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 07DE                  __ptext1 07B6                  __ptext2 07C6  
   end_of_initialization 07FD                _RCSTAbits 0018                _UART_Init 07C6  
              _PORTCbits 0007                _TRISCbits 0087                _TXSTAbits 0098  
             ?_UART_Init 0070      start_initialization 07FB           _UART_send_char 07B6  
 __end_of_UART_send_char 07C6              __pbssCOMMON 0074                ___latbits 0001  
            ??_UART_Init 0070          ?_UART_send_char 0070       UART_send_char@data 0070  
       ??_UART_send_char 0070  
